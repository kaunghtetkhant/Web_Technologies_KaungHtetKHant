<?php

namespace App\Filament\Resources;

use App\Filament\Resources\CustomerResource\Pages;
use App\Filament\Resources\CustomerResource\RelationManagers;
use App\Models\Customer;
use Filament\Forms;
use Filament\Forms\Form;
use Filament\Resources\Resource;
use Filament\Tables;
use Filament\Tables\Table;
use Illuminate\Database\Eloquent\Builder;
use Illuminate\Database\Eloquent\SoftDeletingScope;

class CustomerResource extends Resource
{
    protected static ?string $model = Customer::class;

    protected static ?string $navigationIcon = 'heroicon-o-users';

    protected static ?string $navigationGroup = 'Reports';

    protected static ?string $navigationLabel = 'Customers';




    public static function form(Form $form): Form
    {
        return $form
            ->schema([
                Forms\Components\TextInput::make('name')->label('name'),
                Forms\Components\TextInput::make('username')->label('Email/Phone No'),
                Forms\Components\TextInput::make('password')
                    ->type('password')
                    ->label('Password')
                    ->placeholder('password')
                    ->live()
                    ->suffixActions([
                        Forms\Components\Actions\Action::make('toggle-password-visible')
                            ->icon('heroicon-o-eye')
                            ->iconSize('md')
                            ->action(fn ($component) => $component->type('text')),

                        Forms\Components\Actions\Action::make('toggle-password-invisible')
                            ->icon('heroicon-o-eye-slash')
                            ->iconSize('md')
                            ->action(fn ($component) => $component->type('password'))
                    ]),
            ]);
    }

    public static function table(Table $table): Table
    {
        return $table
            ->columns([
                Tables\Columns\TextColumn::make('name')->label('Name')->searchable(),
                Tables\Columns\TextColumn::make('username')->label('Email')->searchable(),
                Tables\Columns\TextColumn::make('address')->label('Delivery Address'),
                Tables\Columns\TextColumn::make('created_at')->label('Registered Date')->date()

            ])
            ->searchPlaceholder('Search (Name, Email)')
            ->filters([
                //
            ])
            ->actions([
                Tables\Actions\EditAction::make(),
                Tables\Actions\DeleteAction::make(),
            ])
            ->bulkActions([
                Tables\Actions\BulkActionGroup::make([
                    Tables\Actions\DeleteBulkAction::make(),
                ]),
            ])
            ->searchDebounce('750ms');
    }

    public static function getRelations(): array
    {
        return [
            //
        ];
    }

    public static function getPages(): array
    {
        return [
            'index' => Pages\ListCustomers::route('/'),
            'create' => Pages\CreateCustomer::route('/create'),
            'edit' => Pages\EditCustomer::route('/{record}/edit'),
        ];
    }

    public static  function canCreate(): bool
    {
        return false; // TODO: Change the autogenerated stub
    }
}
